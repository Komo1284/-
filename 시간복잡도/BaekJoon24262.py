"""문제
오늘도 서준이는 알고리즘의 수행시간 수업 조교를 하고 있다. 
아빠가 수업한 내용을 학생들이 잘 이해했는지 문제를 통해서 확인해보자.

입력의 크기 n이 주어지면 MenOfPassion 알고리즘 수행 시간을 예제 출력과 같은 방식으로 출력해보자.

MenOfPassion 알고리즘은 다음과 같다.

MenOfPassion(A[], n) {
    i = ⌊n / 2⌋;
    return A[i]; # 코드1
}
입력
첫째 줄에 입력의 크기 n(1 ≤ n ≤ 500,000)이 주어진다.

출력
첫째 줄에 코드1 의 수행 횟수를 출력한다.

둘째 줄에 코드1의 수행 횟수를 다항식으로 나타내었을 때, 최고차항의 차수를 출력한다. 
단, 다항식으로 나타낼 수 없거나 최고차항의 차수가 3보다 크면 4를 출력한다."""

"""
우선 이번 문제를 풀기위해서는 시간복잡도가 무엇인지 그것부터 알 필요가 있다.
문제가 뭔지조차 이해가 안된다.
인터넷에서 글도 찾아보고 읽어보고했지만 한번도 공부해본 적 없는 나에게는 너무나도 어려운 일이었다.

https://www.youtube.com/watch?v=BEVnxbxBqi8
그러다 노마드 코더의 영상을 찾아보게 되었는데 시간복잡도란 무엇인지 알기쉽게 설명해주는 영상이었다.
다른 글이나 영상들에 비해 이해하기 쉬웠고 대략적인 구조는 이해했다.

해당 코드를 시간복잡도로 표현하면 O(1), 따라서 아무리 n의 수가 증가하더라도 딱 한번만 코드를 실행한다.
또한, 입력과 무관한 시간 복잡도 함수는 항수항이므로 차수는 0이 된다.
"""

n = int(input())
print(1)
print(0)

